<!-- preamble start -->
<!DOCTYPE html> 
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>tinytable</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  </head>
  <body>
<!-- preamble end -->

    <script>
      function tinytable(tableId, cellCoordinates, cssClass) {
            var table = document.getElementById("tinytable");
            cellCoordinates.forEach(([i, j]) => {
                table.rows[i].cells[j].classList.add(cssClass);
            });
        }

      function insertSpanRow(i, colspan, content) {
        var table = document.getElementById('tinytable');
        var newRow = table.insertRow(i);
        var newCell = newRow.insertCell(0);
        newCell.setAttribute("colspan", colspan);
        // newCell.innerText = content;
        // this may be unsafe, but innerText does not interpret <br>
        newCell.innerHTML = content;
      }
      function spanCell_tinytable(i, j, rowspan, colspan) {
        var table = document.getElementById("tinytable");
        const targetRow = table.rows[i];
        const targetCell = targetRow.cells[j];
        for (let r = 0; r < rowspan; r++) {
          // Only start deleting cells to the right for the first row (r == 0)
          if (r === 0) {
            // Delete cells to the right of the target cell in the first row
            for (let c = colspan - 1; c > 0; c--) {
              if (table.rows[i + r].cells[j + c]) {
                table.rows[i + r].deleteCell(j + c);
              }
            }
          }
          // For rows below the first, delete starting from the target column
          if (r > 0) {
            for (let c = colspan - 1; c >= 0; c--) {
              if (table.rows[i + r] && table.rows[i + r].cells[j]) {
                table.rows[i + r].deleteCell(j);
              }
            }
          }
        }
        // Set rowspan and colspan of the target cell
        targetCell.rowSpan = rowspan;
        targetCell.colSpan = colspan;
      }

     window.addEventListener('load', function () {
         const cellStyles = [
             {coords: [[0, 0], [0, 1], [0, 2]], class: 'tinytable'},
         ];
         cellStyles.forEach(({coords, class: cssClass}) => {
             tinytable('tinytable', coords, cssClass);
         });
     });

     window.addEventListener('load', function () {
         const cellStyles = [
             {coords: [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0], [11, 0], [12, 0], [13, 0], [14, 0]], class: 'tinytable'},
         ];
         cellStyles.forEach(({coords, class: cssClass}) => {
             tinytable('tinytable', coords, cssClass);
         });
     });

     window.addEventListener('load', function () {
         const cellStyles = [
             {coords: [[0, 1], [1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [8, 1], [9, 1], [10, 1], [11, 1], [12, 1], [13, 1], [14, 1]], class: 'tinytable'},
         ];
         cellStyles.forEach(({coords, class: cssClass}) => {
             tinytable('tinytable', coords, cssClass);
         });
     });

     window.addEventListener('load', function () {
         const cellStyles = [
             {coords: [[0, 2], [1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2], [11, 2], [12, 2], [13, 2], [14, 2]], class: 'tinytable'},
         ];
         cellStyles.forEach(({coords, class: cssClass}) => {
             tinytable('tinytable', coords, cssClass);
         });
     });

     window.addEventListener('load', function () {
         const cellStyles = [
             {coords: [[6, 0], [6, 1], [6, 2]], class: 'tinytable'},
         ];
         cellStyles.forEach(({coords, class: cssClass}) => {
             tinytable('tinytable', coords, cssClass);
         });
     });
    </script>

    <style>
.table td.tinytable, .table th.tinytable {    border-bottom: solid 0.1em #d3d8dc; }
.table td.tinytable, .table th.tinytable {    text-align: left; }
.table td.tinytable, .table th.tinytable {    text-align: center; }
.table td.tinytable, .table th.tinytable {    text-align: center; }
.table td.tinytable, .table th.tinytable {    border-bottom: solid 0.05em black; }
    </style>
    <div class="container">
      <table class="table table-borderless" id="tinytable" style="width: auto; margin-left: auto; margin-right: auto;" data-quarto-disable-processing='true'>
        <thead>
        
              <tr>
                <th scope="col"> </th>
                <th scope="col">(1)</th>
                <th scope="col">(2)</th>
              </tr>
        </thead>
        
        <tbody>
                <tr>
                  <td>(Intercept)</td>
                  <td>30.099 </td>
                  <td>10.790 </td>
                </tr>
                <tr>
                  <td>           </td>
                  <td>(1.634)</td>
                  <td>(5.078)</td>
                </tr>
                <tr>
                  <td>hp         </td>
                  <td>-0.068 </td>
                  <td>-0.052 </td>
                </tr>
                <tr>
                  <td>           </td>
                  <td>(0.010)</td>
                  <td>(0.009)</td>
                </tr>
                <tr>
                  <td>drat       </td>
                  <td>       </td>
                  <td>4.698  </td>
                </tr>
                <tr>
                  <td>           </td>
                  <td>       </td>
                  <td>(1.192)</td>
                </tr>
                <tr>
                  <td>Num.Obs.   </td>
                  <td>32     </td>
                  <td>32     </td>
                </tr>
                <tr>
                  <td>R2         </td>
                  <td>0.602  </td>
                  <td>0.741  </td>
                </tr>
                <tr>
                  <td>R2 Adj.    </td>
                  <td>0.589  </td>
                  <td>0.723  </td>
                </tr>
                <tr>
                  <td>AIC        </td>
                  <td>181.2  </td>
                  <td>169.5  </td>
                </tr>
                <tr>
                  <td>BIC        </td>
                  <td>185.6  </td>
                  <td>175.4  </td>
                </tr>
                <tr>
                  <td>Log.Lik.   </td>
                  <td>-87.619</td>
                  <td>-80.752</td>
                </tr>
                <tr>
                  <td>F          </td>
                  <td>45.460 </td>
                  <td>41.522 </td>
                </tr>
                <tr>
                  <td>RMSE       </td>
                  <td>3.74   </td>
                  <td>3.02   </td>
                </tr>
        </tbody>
      </table>
    </div>
<!-- postamble start -->
  </body>

</html>
<!-- postamble end -->
<!-- hack to avoid NA insertion in last line -->
